{{!< default}}
{{!-- 
/**
 * @Stake v3
 * Developed by Engagement Lab, 2016-2017
 * ==============
 * 
 * Script include for animation logic
 * ==========
 */
--}}

var screensAnim,
		loginAnim,
		timelineCallback;

function rulesAnim(callback) {

	var screens = $('.row.screen');

	if(screens.length === 0)
		return;

  screensAnim = new TimelineLite({ paused: true, onComplete: 
																										  	function() { TweenLite.fromTo($('#btn-next'), 1, {scale:0, autoAlpha:0}, {scale:1, autoAlpha:1, display:'block', ease:Elastic.easeOut}); } 
																		});
	
  _.each(screens, function(el, index) {

		screensAnim.fromTo(el, .5, {xPercent:-100}, { x:0, xPercent:0, ease:Expo.easeInOut, opacity: 1, display:'block', delay:.5 });

		if ($(el).find('.rules-image')) {
			$('rules-image').show();
		}

		if(index < screens.length-1)
			screensAnim.fromTo(el, .5, {xPercent:0}, { x:200, xPercent:200, ease:Expo.easeInOut, opacity:0, display:'none', delay:3 });

  });

  screensAnim.play();
	
}

function loginEnterName() {

	loginAnim = new TimelineMax({paused:true});

	loginAnim.from($('#player-name'), .5, {yPercent:-20, autoAlpha:0, delay:1.4, ease:Expo.easeOut}, .2)
            .from($('#btn_submit_name'), 1.5, {yPercent:20, autoAlpha:0, delay:1.5, ease:Expo.easeOut})

						.to($('#name'), .5, { autoAlpha:0, display: 'none' }, 'name')
						.fromTo($('#choices'), .5, { autoAlpha:0, display: 'none' }, { autoAlpha:1, display: 'block' })
						.staggerFrom($('#choices .btn'), 1, {yPercent:20, autoAlpha:0, ease:Expo.easeOut}, .7).append('choices')

						.to($('#choices'), .5, { autoAlpha:0, display: 'none' })

						.fromTo($('#join'), .5, { autoAlpha:0, display: 'none' }, { autoAlpha:1, display: 'block' }).append('join')
						
						.to($('#join'), .01, { autoAlpha:0, display: 'none' }).append('choices-new')
						.fromTo($('#choices'), .5, { autoAlpha:1, display: 'block' }, { autoAlpha:0, display: 'none' })
						.to($('#login-header'), .5, { autoAlpha:0, height:0, display: 'none' })
						.fromTo($('#decider'), .5, { autoAlpha:0, display: 'none' }, { autoAlpha:1, display: 'block' })
						.call(function() {
							if(timelineCallback)
								timelineCallback();
						})
						.from($('#decks'), .5, { autoAlpha:0, yPercent:10, ease:Expo.easeOut }).append('new');

  $('.lobby .btn, .back-button').click(function(evt) {
  	if($(evt.currentTarget).data('from'))
	  	loginFromTo($(evt.currentTarget).data('from'), $(evt.currentTarget).data('to'));
  });
	
	TweenLite.fromTo(loginAnim, loginAnim.getLabelTime('name'), {time:0}, {time:loginAnim.getLabelTime('name')});

}

function loginPlayerChoices() {

	TweenLite.fromTo(loginAnim, 1.5, {time:loginAnim.getLabelTime('name')}, {time:loginAnim.getLabelTime('choices')});

}

function loginNewGame(callback) {
	
	timelineCallback = callback;

	TweenLite.fromTo(loginAnim, 1.5, {time:loginAnim.getLabelTime('choices-new')}, {time:loginAnim.getLabelTime('new')});
	
}

function loginFromTo(from, to) {

	TweenLite.fromTo(loginAnim, 1.5, {time:loginAnim.getLabelTime(from)}, {time:loginAnim.getLabelTime(to)});
	
}

function modalOpenClose(modalElement, open) {

	var hidden = { yPercent:100, opacity:0, ease:Expo.easeOut, display:'none' },
			shown = { yPercent:0, opacity:1, ease:Expo.easeIn, display:'block' };

	TweenLite.fromTo(modalElement, .5, (open ? hidden:shown) , (open ? shown:hidden) );

}

$('.modal').on('show', function(evt) {
	modalOpenClose($(evt.currentTarget), true);
});
$('.modal').on('hide', function(evt) {
	modalOpenClose($(evt.currentTarget), false);
});